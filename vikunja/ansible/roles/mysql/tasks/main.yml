---
- name: Install mysql-server
  apt:
    name: "mysql-server"
    state: present
    update_cache: true

- name: Deploy custom my.cnf
  template:
    src: "my.cnf.j2"
    dest: "/etc/mysql/my.cnf"
    owner: "root"
    group: "root"
    mode: 0600
  notify: "Restart mysql"

- name: Install python3-pip
  package:
    name: python3-pip

- name: Install python3-dev
  package:
    name: python3-dev

- name: Make sure pymysql is present
  pip:
    name: pymysql
    state: present
    executable: /usr/bin/pip3

- name: Sets the root password
  mysql_user:
    name: root
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes all anonymous user accounts
  mysql_user:
    name: ''
    host_all: yes
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Removes the MySQL test database
  mysql_db:
    name: test
    state: absent
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: Ensure application database exists
  mysql_db:
    name: "taskslist-{{ env }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: "create user for application database"
  mysql_user:
    name: "{{ DB_USER }}"
    password: "{{ DB_PASSWORD }}"
    priv: "*.*:ALL"
    host: "{{ item }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"
  with_items:
    - localhost
    - "{{Â hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - "{{ app_ip }}"
